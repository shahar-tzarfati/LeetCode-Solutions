/*Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.
*
*Example 1:
*
*Input: nums = [1,2,3,4,5,6,7], k = 3
*Output: [5,6,7,1,2,3,4]
*Explanation:
*rotate 1 steps to the right: [7,1,2,3,4,5,6]
*rotate 2 steps to the right: [6,7,1,2,3,4,5]
*rotate 3 steps to the right: [5,6,7,1,2,3,4]
*Example 2:
*
*Input: nums = [-1,-100,3,99], k = 2
*Output: [3,99,-1,-100]
*Explanation: 
*rotate 1 steps to the right: [99,-1,-100,3]
*/rotate 2 steps to the right: [3,99,-1,-100]
class Solution {
    public void rotate(int[] nums, int k) {
        if (nums == null || nums.length == 1){
            return;
        }
        k = k % nums.length;
        for (int i = 0; i < nums.length / 2; i++){
            int temp = nums[nums.length - 1 - i];
            nums[nums.length - 1 - i] = nums[i];
            nums[i] = temp;
        }
        for (int i = 0; i < k / 2; i++){
            int temp = nums[k - 1 - i];
            nums[k - 1 - i] = nums[i];
            nums[i] = temp;
        }
        for (int i = k; i < (nums.length + k) / 2; i++){
            int temp = nums[nums.length - i + k - 1];
            nums[nums.length + k - i - 1] = nums[i];
            nums[i] = temp;
        }
    }
}
